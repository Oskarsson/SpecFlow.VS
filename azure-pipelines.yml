trigger:
- master

pool:
  vmImage: 'windows-2019'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@0

- task: UseDotNet@2
  displayName: 'Use .Net Core sdk 3.x'
  inputs:
    version: 3.x

- task: UseDotNet@2
  displayName: 'Use .Net 5 sdk'
  inputs:
    version: 5.x

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore (with NuGet.config)'
  inputs:
    command: restore
    feedsToUse: config
    nugetConfigPath: NuGet.config

- task: PowerShell@2
  displayName: 'Build Connectors'
  inputs:
    targetType: 'inline'
    script: |
        cd .\Connectors
        .\build.ps1 $(buildConfiguration)

- task: VSBuild@1
  displayName: 'Build Solution'
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployExtension=false /p:AppInsightsInstrumentationKey=$(AppInsightsInstrumentationKey) /nowarn:VSTHRD010'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  displayName: 'Run Unit Tests'
  inputs:
    testAssemblyVer2: |
     **\$(buildConfiguration)\**\*tests*.dll
     !**\obj\**
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  displayName: 'Run SpecFlow Scenarios'
  inputs:
    testAssemblyVer2: |
     **\$(buildConfiguration)\**\*specs*.dll
     !**\obj\**
    testFiltercriteria: '$(specsFilterCriteria)'
    otherConsoleOptions: '/platform:x64'
    testRunTitle: 'Deveroom Specs'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    rerunFailedTests: true

- task: CopyFiles@2
  displayName: 'Copy dlls and changelog'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: |
     **\bin\$(buildConfiguration)\**
     Changelog.md
    TargetFolder: '$(build.artifactstagingdirectory)\drop'
  condition: succeededOrFailed()

- task: CopyFiles@2
  displayName: 'Copy NuGet folder'
  inputs:
    SourceFolder: 'd:\a\1\Nuget'
    Contents: '**'
    TargetFolder: '$(build.artifactstagingdirectory)\drop\NuGet'
  condition: succeededOrFailed()

- task: CopyFiles@2
  displayName: 'Copy VSIX'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**\bin\$(buildConfiguration)\**\*.vsix'
    TargetFolder: '$(build.artifactstagingdirectory)\vsix'
    flattenFolders: true
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)\drop'
  condition: succeededOrFailed()
 
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: vsix'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)\vsix'
    ArtifactName: vsix
  condition: succeededOrFailed()
